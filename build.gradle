buildscript {
    repositories {
        maven {
            url 'http://repo.dev.milezero.com/artifactory/plugins-release'
            
        }
        
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

plugins {
    id 'java'
}

allprojects {
    apply plugin: "com.jfrog.artifactory"
}

artifactory {
    contextUrl = "http://repo.dev.milezero.com/artifactory"   //The base Artifactory URL if not overridden by the publisher/resolver
    resolve {
        repository {
            repoKey = 'libs-release'
            maven = true
            username = 'repo'
            password = 'firstmil3'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('software.amazon.awssdk:bom:2.10.73')
    implementation platform('com.amazonaws:aws-xray-recorder-sdk-bom:2.4.0')
    implementation 'software.amazon.awssdk:lambda'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-core'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk-core'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk-v2'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk-v2-instrumentor'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:2.2.9'
    implementation 'com.amazonaws:aws-java-sdk-sqs:1.11.494'
    implementation 'com.amazonaws:amazon-sqs-java-messaging-lib:1.0.4'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'com.google.guava:failureaccess:1.0.1'
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    implementation 'org.apache.logging.log4j:log4j-api:2.13.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.6.7'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.6.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.6.7'
    implementation 'org.projectlombok:lombok:1.18.4'
    implementation 'org.slf4j:jcl-over-slf4j:1.7.25'
    implementation 'org.slf4j:log4j-over-slf4j:1.7.25'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.mz.hei:hei-models:2.2.77'
    implementation 'com.mz.core:common-utils:7.5.6'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.2.0'
    // testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    // testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

test {
    // useJUnitPlatform()
}

task packageFat(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    dirMode = 0755
    fileMode = 0755
}

task packageLibs(type: Zip) {
    into('java/lib') {
        from configurations.runtimeClasspath
    }
    dirMode = 0755
    fileMode = 0755
}

task packageSkinny(type: Zip) {
    from compileJava
    from processResources
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

build.dependsOn packageSkinny
